{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","role","htmlFor","TextForms","useState","text","setText","class","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","map","currentValue","slice","join","document","getElementById","select","navigator","clipboard","writeText","trim","filter","element","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.caac6a86.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li> */}\r\n        </ul>\r\n        <form className=\"d-flex\">\r\n\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n\r\n      \r\n\r\n        </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title : PropTypes.string.isRequired ,\r\n  aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title Here',\r\n  aboutText: 'About'\r\n};\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForms(props) {\r\n    const handleUpClick =()=>{\r\n        // console.log(\"UpperCase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n    const handleLoClick =()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n\r\n    }\r\n    const handleTcClick = ()=> {\r\n        let newText = text.split(\" \").map((currentValue) => {\r\n            let newText = currentValue[0].toUpperCase() + currentValue.slice(1);\r\n            return newText;\r\n        });\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Converted to Titlecase\", \"success\")\r\n\r\n    }\r\n    const handleClearClick =()=>{\r\n        let newText = ' ';\r\n        setText(newText)\r\n        props.showAlert(\"Text is Cleared\", \"success\")\r\n\r\n    }\r\n    const handleOnChange =(event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy= ()=>{\r\n        var text= document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\", \"success\")\r\n\r\n\r\n    // const handleExtraSpaces= ()=> {\r\n    //     let newText = text.split(/[ ]+/);\r\n    //     setText(newText.join(\" \"))\r\n    // }\r\n    \r\n}\r\n\r\n    const [text, setText] = useState('');    // React.com se laaya isko \r\n    // text = \"new Text\" ; // Wrong way to chnge the text\r\n    // setText (\"new Text\"); // correct way to chnge the State \r\n    return (\r\n        <>\r\n        <div class=\"container\" style={{color: props.mode==='light'?'#312d2d':'white'}}>   \r\n            <h1>{props.heading}</h1>      \r\n           <div className=\"mb-3\">\r\n           {/* <label for=\"myBox\" class=\"form-label\">Example textarea</label> */}\r\n           <textarea className=\"form-control\" \r\n           value ={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#312d2d':'white' , color: props.mode==='light'?'#312d2d':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n           </div>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleTcClick}>Convert to Titlecase</button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n           {/* <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button> */}\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='light'?'#312d2d':'white'}}>\r\n            <h1>Your text summary</h1>\r\n            <p >{((text.trim().split(\" \")).filter(function (element) {\r\n                    return element !== \"\";\r\n                })).length} words and {text.length} characters </p>\r\n\r\n            <p>{0.08 * text.split (\" \").length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Kuch toh likh le nalle\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForms from \"./components/TextForms\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether the darkmode is on or off\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#312d2d\";\n      showAlert(\"Darkmode has been activated\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Lightmode has been activated\", \"success\");\n    }\n  };\n  return(\n    <>\n      {/* <Navbar title=\"Textutils\" aboutText= \"About TextUtils\"/> */}\n      {/* <Router> */}\n\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForms\n              showAlert={showAlert}\n              heading=\"Enter the text to analyze below\"\n              mode={mode}\n            />\n          {/* </Route>\n        </Switch> */}\n        \n      </div>\n     {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}